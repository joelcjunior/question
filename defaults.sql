SELECT 
CD_FILIAL as CD_FILIAL,
CD_ATIVIDADE,
CD_CANAL,
CD_CIDADE,
CD_CLIENTE,
CD_CLSCLI,
CD_EMPRESA,
CD_ESTADO,
CD_GERENTE,
CD_LOJA,
CD_REPRESENTANTE,
CD_SEGMERCADO,
ID_PEDIDO,
CD_FILIAL_DESC,
ANO_EMISSAO,
MES_EMISSAO,
DT_TRANSACAO,
CASE WHEN SUM(VL_VENCIDO) < 0 THEN SUM(VL_VENCIDO) 
     WHEN SUM(VL_VENCIDO) > 0 THEN SUM(VL_VENCIDO)*-1 
     ELSE SUM(VL_VENCIDO) END AS VL_VENCIDO,
     
 CASE WHEN SUM(VL_ATRASO) < 0 THEN SUM(VL_ATRASO) 
     WHEN SUM(VL_ATRASO) > 0 THEN SUM(VL_ATRASO)*-1 
     ELSE SUM(VL_ATRASO) END AS VL_ATRASO,    
     
     
SUM(VL_TOTALFATU) AS VL_TOTALFATU
FROM (

-- EM ATRASO ----- INADIMPLÃŠNCIA
select 
CD_FILIAL as CD_FILIAL,
CD_ATIVIDADE,
CD_CANAL,
CD_CIDADE,
CD_CLIENTE,
CD_CLSCLI,
CD_EMPRESA,
CD_ESTADO,
CD_GERENTE,
CD_LOJA,
CD_REPRESENTANTE,
CD_SEGMERCADO,
ID_PEDIDO,
fun.cdesc(CD_FILIAL,'TAUX_FILIAL') as CD_FILIAL_DESC,
DT_VENREAL 	AS DT_TRANSACAO,
--ANO_VENREAL  AS ANO_EMISSAO,
--MES_VENREAL AS MES_EMISSAO,
CASE
        WHEN SUM(DECODE(CD_TPMOV,'R',DECODE(SIGN(DT_DISPONI - TRUNC(SYSDATE-60)),-1,VL_SALDO,0),0))  <> 0
        THEN TO_CHAR(ADD_MONTHS(TO_DATE(DT_VENREAL,'DD/MM/YY'),2),'YYYY') 
        ELSE 
        TO_CHAR(TO_DATE(DT_VENREAL,'DD/MM/YY'),'YYYY') 
        END AS   ANO_EMISSAO,
	
        
CASE
        WHEN SUM(DECODE(CD_TPMOV,'R',DECODE(SIGN(DT_DISPONI - TRUNC(SYSDATE-60)),-1,VL_SALDO,0),0))  <> 0
        THEN TO_CHAR(ADD_MONTHS(TO_DATE(DT_VENREAL,'DD/MM/YY'),2),'MM') 
        ELSE 
        TO_CHAR(TO_DATE(DT_VENREAL,'DD/MM/YY'),'MM')
        END AS MES_EMISSAO,

SUM(DECODE(CD_TPMOV,'R',DECODE(SIGN(DT_DISPONI - TRUNC(SYSDATE-60)),-1,VL_SALDO,0),0)) as VL_VENCIDO, -- defaults

CASE 
	WHEN ABS(SUM(DECODE(CD_TPMOV,'R',DECODE(SIGN(DT_DISPONI - TRUNC(SYSDATE-60)),-1,VL_SALDO,0),0))) <=0
	THEN ABS(SUM(DECODE(CD_TPMOV,'R',DECODE(SIGN(DT_DISPONI - TRUNC(SYSDATE-5)),-1,VL_SALDO,0),0)))
	ELSE 0 
	END AS VL_ATRASO,

0 AS VL_TOTALFATU
FROM VM_001_FLXCAIXA
where ( ( DECODE(TO_NUMBER(NVL(TRIM('30'),-1)),-1,1,
(CASE WHEN (DT_DISPONI <= (TRUNC(SYSDATE)+TO_NUMBER('30'))) THEN 1 ELSE 0 END)) = 1 and 
DECODE(CD_TPMOV,'R',VL_SALDO,0) + DECODE(CD_TPMOV,'R',DECODE(CD_TPOCCOB,'4',VL_SALDOOUT,0),0) + DECODE(CD_TPMOV,'R',DECODE(CD_TPOCCOB,'2',VL_SALDOOUT,0),0)<> '0' and 
CD_TPMOV= 'R'
 )) group by CD_FILIAL, CD_ATIVIDADE, CD_CANAL, CD_CIDADE, CD_CLIENTE, 
CD_CLSCLI, CD_EMPRESA, CD_ESTADO, CD_GERENTE, CD_LOJA, 
CD_REPRESENTANTE, CD_SEGMERCADO, ID_PEDIDO, fun.cdesc(CD_FILIAL,'TAUX_FILIAL'), DT_VENREAL, MES_EMISSAO, ANO_EMISSAO,
0
 
 
 
 
 
UNION ALL

-- FATURAMENTO

SELECT 
CD_FILIAL as r_CD_FILIAL,
CD_ATIVIDADE,
CD_CANAL,
CD_CIDADE,
CD_CLIENTE,
CD_CLSCLI,
CD_EMPRESA,
CD_ESTADO,
CD_GERENTE,
CD_LOJA,
CD_REPRESENTANTE,
CD_SEGMERCADO,
CD_PEDIDO AS ID_PEDIDO,
fun.cdesc(CD_FILIAL,'TAUX_FILIAL') as ret_nm_CD_FILIAL_desc,
DT_EMISSAO AS DT_TRANSACAO,
ANO_EMISSAO AS ANO_EMISSAO,
MES_EMISSAO AS MES_EMISSAO,
0 AS VL_VENCIDO,
0 AS VL_ATRASO,
SUM(VL_TOTAL) as VL_TOTALFATU
FROM VM_000_SAIDAS 
WHERE CD_TIPO = '01'
group by CD_FILIAL, fun.cdesc(CD_FILIAL,'TAUX_FILIAL'), CD_FILIAL, 'TAUX_FILIAL', CD_FILIAL, 
'TAUX_FILIAL', CD_FILIAL, 'TAUX_FILIAL', ANO_EMISSAO, MES_EMISSAO, 
0, CD_ATIVIDADE, CD_CANAL, CD_CIDADE, CD_CLIENTE, 
CD_CLSCLI, CD_EMPRESA, CD_ESTADO, CD_GERENTE, CD_LOJA, 
CD_REPRESENTANTE, CD_SEGMERCADO, CD_PEDIDO, DT_EMISSAO
) 
group by CD_FILIAL, CD_FILIAL_DESC, ANO_EMISSAO, CD_ATIVIDADE, MES_EMISSAO, 
CD_CANAL, CD_CIDADE, CD_CLIENTE, CD_CLSCLI, CD_EMPRESA, 
CD_ESTADO, CD_GERENTE, CD_LOJA, CD_REPRESENTANTE, CD_SEGMERCADO, 
ID_PEDIDO, DT_TRANSACAO;